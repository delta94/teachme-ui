.transition(@transition: 0.2s) {
  -webkit-transition: @transition;
  -moz-transition: @transition;
  -o-transition: @transition;
  transition: @transition;
}
.borderRadius(@radius: 50%) {
  -moz-border-radius: @radius;
  -webkit-border-radius: @radius;
  -o-border-radius: @radius;
  border-radius: @radius;
}
.boxSizing() {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box;
}
.hide() {
  display: none;
}
.noSelect() {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
.listClear {
  margin: 0;
  padding: 0;
  list-style: none;
}
.clearBoth {
  clear: both;
}
.floatRight {
  float: right;
}
.floatLeft {
  float: left;
}
.alignLeft {
  text-align: left;
}
.alignCenter {
  text-align: center;
}
.alignRight {
  text-align: right;
}
.lineThrough {
  text-decoration: line-through;
}
.noTransition {
  -webkit-transition: none !important;
  -moz-transition: none !important;
  -o-transition: none !important;
  transition: none !important;
}

.nthChildAnimationDelay(@n, @i: 1) when (@i =< @n) {
  &:nth-child(@{i}) {
    animation-delay: (200ms + (@i * 100));
  }
  .nthChildAnimationDelay(@n, (@i + 1));
}
